// automatically generated by the FlatBuffers compiler, do not modify
package org.apache.spark.network.rpmof;

import java.nio.*;
import java.lang.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PushBlockMsg extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static PushBlockMsg getRootAsPushBlockMsg(ByteBuffer _bb) { return getRootAsPushBlockMsg(_bb, new PushBlockMsg()); }
  public static PushBlockMsg getRootAsPushBlockMsg(ByteBuffer _bb, PushBlockMsg obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PushBlockMsg __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int shuffleId() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int mapId() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int partitionId() { int o = __offset(8); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public long buffer() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long size() { int o = __offset(12); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long rkey() { int o = __offset(14); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createPushBlockMsg(FlatBufferBuilder builder,
      int shuffleId,
      int mapId,
      int partitionId,
      long buffer,
      long size,
      long rkey) {
    builder.startTable(6);
    PushBlockMsg.addRkey(builder, rkey);
    PushBlockMsg.addSize(builder, size);
    PushBlockMsg.addBuffer(builder, buffer);
    PushBlockMsg.addPartitionId(builder, partitionId);
    PushBlockMsg.addMapId(builder, mapId);
    PushBlockMsg.addShuffleId(builder, shuffleId);
    return PushBlockMsg.endPushBlockMsg(builder);
  }

  public static void startPushBlockMsg(FlatBufferBuilder builder) { builder.startTable(6); }
  public static void addShuffleId(FlatBufferBuilder builder, int shuffleId) { builder.addShort(0, (short)shuffleId, (short)0); }
  public static void addMapId(FlatBufferBuilder builder, int mapId) { builder.addShort(1, (short)mapId, (short)0); }
  public static void addPartitionId(FlatBufferBuilder builder, int partitionId) { builder.addShort(2, (short)partitionId, (short)0); }
  public static void addBuffer(FlatBufferBuilder builder, long buffer) { builder.addLong(3, buffer, 0L); }
  public static void addSize(FlatBufferBuilder builder, long size) { builder.addLong(4, size, 0L); }
  public static void addRkey(FlatBufferBuilder builder, long rkey) { builder.addLong(5, rkey, 0L); }
  public static int endPushBlockMsg(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
}

